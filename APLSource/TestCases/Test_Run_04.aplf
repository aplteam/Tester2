 r←Test_Run_04(debugFlag batchFlag);log;rc;expected;debugFlag;⎕TRAP;T2;total;noOf;noOf2
⍝ Exercise the `RunThese` method
 ⎕TRAP←(999 'C' '∘∘∘ ⍝ Deliberate error')(0 'N')
 r←T._Failed

 T2←⎕NEW ##.Tester2 TestCasesSimu
 T2.TestFlag←1
 (rc log)←T2.RunThese 2 3
 expected←'  1 test case of 1 called' '  0 test cases failed' '  0 test cases broken'
 →T.FailsIf expected≢¯3↑¯3↓log

 :Trap 1001   ⍝ Catch stop vector
     T2←⎕NEW ##.Tester2 TestCasesSimu
     T2.TestFlag←1
     (rc log)←T2.RunThese ¯2
     →T.FailsIf 1
 :EndTrap

 :Trap 1001    ⍝ Catch stop vector
     T2←⎕NEW ##.Tester2 TestCasesSimu
     T2.TestFlag←1
     log←T2.RunThese 0
     →T.FailsIf 1
 :EndTrap

 ⎕TRAP←(1001 'E' '→⎕lc')(0 'S')
 T2←⎕NEW ##.Tester2 TestCasesSimu
 T2.TestFlag←1
 (rc log)←T2.RunThese'Grp1' 0
 →T.FailsIf 3 0 0≢∆GetTotals log

 T2←⎕NEW ##.Tester2 TestCasesSimu
 T2.TestFlag←1
 (rc log)←T2.RunThese'Test_Grp1' 0
 →T.FailsIf 3 0 0≢∆GetTotals log

 T2←⎕NEW ##.Tester2 TestCasesSimu
 T2.TestFlag←1
 (rc log)←T2.RunThese''
 total←⊃∆GetTotals log
 (rc log)←T2.RunThese'Grp2'
 noOf←⊃∆GetTotals log
 (rc log)←T2.RunThese'~Grp2'
 noOf2←⊃∆GetTotals log
 →T.PassesIf noOf2=total-noOf

 r←T._OK
